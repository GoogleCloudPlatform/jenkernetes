package org.jenkinsci.plugins.kubernetesworkflowsteps;

import com.github.kubernetes.java.client.model.ReplicationControllerList;

import org.jenkinsci.plugins.workflow.steps.AbstractStepDescriptorImpl;
import org.kohsuke.stapler.DataBoundConstructor;

import hudson.Extension;

/**
 * TODO: Insert description here. (generated by elibixby)
 */
public class GetAllReplicationControllersStep extends KubeStep<Void, ReplicationControllerList> {

  @DataBoundConstructor
  public GetAllReplicationControllersStep() {
    super(null);
    // TODO(elibixby): Auto-generated constructor stub
  }
  
  public static class Execution extends KubeStepExecution<Void, ReplicationControllerList, GetAllReplicationControllersStep>{

    /* (non-Javadoc)
     * @see org.jenkinsci.plugins.workflow.steps.AbstractSynchronousStepExecution#run()
     */
    @Override
    protected ReplicationControllerList run() throws Exception {
      return this.getKubeClient().getAllReplicationControllers();
      
    }
    
  }
  
  @Extension
  public static class DescriptorImpl extends AbstractStepDescriptorImpl{
    public DescriptorImpl() {
      super(Execution.class);
    }

    @Override public String getFunctionName() {
      return "kube_get_all_replication_controllers";
    }

    @Override public String getDisplayName() {
      return "Get a Kubernetes ReplicationControllerList of all ReplicationControllers";
    }
  }
}
